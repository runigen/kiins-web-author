
# 1. 빌드 단계 (멀티스테이지)
FROM node:20-alpine AS builder
# 작업 디렉토리 설정
WORKDIR /app
ARG APP_DIR=frontend/app

# 종속성 설치 (package.json, package-lock.json만 먼저 복사 → 캐싱 최적화)
COPY ${APP_DIR} ./
# 프로덕션 및 빌드에 필요한 dependencies 설치
RUN npm ci
# Next.js 빌드
RUN npm run build:prd

# 2. 런타임 단계
FROM public.ecr.aws/docker/library/nginx:1.18.0-alpine as production-stage

COPY --from=builder /app/build /usr/share/nginx/html
#COPY ./.drone/dev/nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80


CMD ["nginx", "-g", "daemon off;"]

